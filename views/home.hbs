<!DOCTYPE html>
<html lang="en-au">
<head>
    <title>Worm under a video</title>

    <link rel="stylesheet" href="/styles/bootstrap.min.css" />
    <link rel="stylesheet" href="/styles/worm-under-a-video.css" />

    <link rel="stylesheet" href="http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
    <script src="http://code.jquery.com/jquery-1.9.1.js"></script>
    <script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>
    <script src="http://code.highcharts.com/highcharts.js"></script>
    <script src="http://code.highcharts.com/modules/exporting.js"></script>
    <script src="http://shared.ninemsn.com.au/share/short_cache/js/video/ninemsn.portal.common.video.loader-latest.min.js"></script>

</head>
<body>

    <div class="row">
        <div class="span12 main">
            <h1>Worm under a video</h1>

            <div class="slider pull-left">
                <div id="slider-vertical" style="height: 475px; width: 75px; "></div>
            </div>

            <div id="video"></div>

            <div id="container" style="min-width: 310px; height: 200px; margin: 0 auto"></div>

        </div>
    </div>
    <script type="text/javascript" src="/scripts/worm-under-a-video.js"></script>
    <script type="text/javascript" src="/socket.io/socket.io.js"></script>
    <script type="text/javascript">
        var myPlayer;
        ninemsn.portal.common.video.ready(function () {
            myPlayer = new ninemsn.portal.common.video.Player({
                outputLocation: "video",
                height: '500',
                width: '800',
                data: {
                    method: ninemsn.portal.common.video.enumerations.data.method.ID,
                    filter: {
                        // id: "2633252440001"
                        id: '97F3402B-B6B6-451A-A99B-03127133372D'
                    }
                },
                ads: {
                    freewheel: {
                        serverUrl: 'http://5c264.v.fwmrm.net',
                        networkId: 377444,
                        siteSection: 'noAds'
                    }
                }
            });

            myPlayer.on('video:opening', function () {
                var socket = io.connect('http://localhost');
                var data = null;
                var positionsSent = {};

                var getPosition = function () {
                    return parseInt(myPlayer.get('POSITION'));
                };

                var getMood = function () {
                    return 5;
                };

                var collect = function () {
                    var position = getPosition();

                    if (!positionsSent[position]) {
                        var mood = getMood();
                        socket.emit('update', { mood: mood, index: position });
                        positionsSent[position] = true;
                    }

                    setTimeout(collect, 500);
                };

                socket.on('init', function (initData) {
                    data = initData;
                    collect()
                });
            });
        });
    </script>
</body>
</html>